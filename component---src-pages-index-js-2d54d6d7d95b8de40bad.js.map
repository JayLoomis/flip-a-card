{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","title","allSitePage","edges","map","edge","to","node","path","frontName","context","card","front","name","backName","back","cardName","query"],"mappings":"+MAyBeA,UAbG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,4BACCD,EAAKE,YAAYC,MAAMC,KAAI,SAACC,GAAD,OAC1B,4BACE,kBAAC,OAAD,CAAMC,GAAID,EAAKE,KAAKC,MAZX,SAAAH,GACf,IAAMI,EAAYJ,EAAKE,KAAKG,QAAQC,KAAKC,MAAMC,KACzCC,EAAWT,EAAKE,KAAKG,QAAQC,KAAKI,KAAKF,KAC7C,OAAQJ,IAAcK,EAAYL,EAAeA,EAA1C,MAAyDK,EAS/BE,CAASX,WASrC,IAAMY,EAAK","file":"component---src-pages-index-js-2d54d6d7d95b8de40bad.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst cardName = edge => {\n  const frontName = edge.node.context.card.front.name\n  const backName = edge.node.context.card.back.name\n  return (frontName === backName) ? frontName : `${frontName} / ${backName}`\n}\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <ul>\n    {data.allSitePage.edges.map((edge) => (\n      <li>\n        <Link to={edge.node.path}>{cardName(edge)}</Link>\n      </li>\n    ))}\n    </ul>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\nquery AllCardPages {\n  allSitePage(filter: {context: {card: {front: {name: {glob: \"*\"}}}}}) {\n    edges {\n      node {\n        path\n        context {\n          card {\n            front {\n              name\n            }\n            back {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}