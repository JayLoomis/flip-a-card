{"version":3,"sources":["webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ramda/es/map.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/pluck.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/append.js","webpack:///./node_modules/ramda/es/internal/_concat.js","webpack:///./src/pages/index.js"],"names":["_checkForMethod","methodname","fn","length","arguments","obj","_isArray","apply","this","Array","prototype","slice","call","XReduceBy","valueFn","valueAcc","keyFn","xf","inputs","_xfBase","init","result","key","_has","input","_curryN","_dispatchable","list","_reduce","acc","elt","_curry2","item","push","_curry3","f3","a","b","c","_isPlaceholder","_b","_c","_a","_curry1","d","v","paths","val","idx","p","XMap","f","functor","Object","toString","curryN","keys","_map","el","set1","set2","len1","len2","_concat","IndexPage","data","title","map","cardGroup","tag","node","to","path","frontName","context","card","front","name","backName","back","cardName","nodes","JSON","stringify","cards","cardGroups","groupBy","edge","pathOr","pluck","allSitePage","edges","reduce","append","groupedCards","query"],"mappings":"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","file":"component---src-pages-index-js-958a3d224008f556bbf7.js","sourcesContent":["import _isArray from './_isArray.js';\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry2 from './internal/_curry2.js';\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry2 from './internal/_curry2.js';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","import React from \"react\"\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport { append, groupBy, keys, map, pluck, pathOr, reduce } from 'ramda'\n\nconst cardName = node => {\n  const frontName = node.context.card.front.name\n  const backName = node.context.card.back.name\n  return (frontName === backName) ? frontName : `${frontName} / ${backName}`\n}\n\nconst groupedCards = data => {\n  const cardGroups = groupBy(edge => pathOr(['no tags'], ['context', 'card', 'front', 'tags'], edge)[0], pluck('node', data.allSitePage.edges))\n  return reduce(\n    (a, tag) => append({\n      tag,\n      nodes: cardGroups[tag]\n    }, a),\n    [],\n    keys(cardGroups)\n  )\n}\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    {map((cardGroup) => (\n      <div>\n        <h3>{cardGroup.tag}</h3>\n        <ul>\n          {map(node => (\n            <li>\n              <Link to={node.path}>{cardName(node)}</Link>\n            </li>\n          ), cardGroup.nodes)}\n        </ul>\n        <pre>{JSON.stringify(cardGroup.cards)}</pre>\n      </div>\n    ), groupedCards(data))}\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\nquery AllCardPages {\n  allSitePage(filter: {context: {card: {front: {name: {glob: \"*\"}}}}}) {\n    edges {\n      node {\n        path\n        context {\n          card {\n            front {\n              name\n              tags\n              icons\n            }\n            back {\n              name\n              tags\n              icons\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}